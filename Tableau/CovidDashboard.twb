<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0315.1000                               -->
<workbook original-version='18.1' source-build='2020.4.3 (20204.21.0315.1000)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sayfa1 (Tableau Table1)' inline='true' name='federated.1vwxacd09zde151ak5j240zt97g2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table1' name='excel-direct.106hb540n4xr4z1b68rvs1nynn0l'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Osman/Desktop/asdfgh/sql/Tableau Table1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.106hb540n4xr4z1b68rvs1nynn0l' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.106hb540n4xr4z1b68rvs1nynn0l' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_C1B08A7C5890420C9A1F33B53BE0DE85]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_C1B08A7C5890420C9A1F33B53BE0DE85]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_C1B08A7C5890420C9A1F33B53BE0DE85]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sayfa1' datatype='table' name='[__tableau_internal_object_id__].[Sayfa1_C1B08A7C5890420C9A1F33B53BE0DE85]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sayfa1' id='Sayfa1_C1B08A7C5890420C9A1F33B53BE0DE85'>
            <properties context=''>
              <relation connection='excel-direct.106hb540n4xr4z1b68rvs1nynn0l' name='Sayfa1' table='[Sayfa1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sayfa1 (Tableau Table2)' inline='true' name='federated.08wgs0612o17f210tvr8q1bvt3ik' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table2' name='excel-direct.17u8rri0mqqi170ztwlu91hxuq41'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Osman/Desktop/asdfgh/sql/Tableau Table2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.17u8rri0mqqi170ztwlu91hxuq41' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.17u8rri0mqqi170ztwlu91hxuq41' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_BECE8687DCD34DA29616DEBC4F3AE215]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_BECE8687DCD34DA29616DEBC4F3AE215]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sayfa1' datatype='table' name='[__tableau_internal_object_id__].[Sayfa1_BECE8687DCD34DA29616DEBC4F3AE215]' role='measure' type='quantitative' />
      <column caption='Continents' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#bd273f'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15c48'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#e66549'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#fa9d4f'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sayfa1' id='Sayfa1_BECE8687DCD34DA29616DEBC4F3AE215'>
            <properties context=''>
              <relation connection='excel-direct.17u8rri0mqqi170ztwlu91hxuq41' name='Sayfa1' table='[Sayfa1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sayfa1 (Tableau Table3)' inline='true' name='federated.1q0kfud1ftacg71b8u60c0lxu6tb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table3' name='excel-direct.1j4g4ys16fdygv1g6owgc1hxja2m'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Osman/Desktop/asdfgh/sql/Tableau Table3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1j4g4ys16fdygv1g6owgc1hxja2m' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:D233:no:A1:D233:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1j4g4ys16fdygv1g6owgc1hxja2m' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:D233:no:A1:D233:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D233:no:A1:D233:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_7983CA442F6044AD994AA2C792D46D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_7983CA442F6044AD994AA2C792D46D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_7983CA442F6044AD994AA2C792D46D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_7983CA442F6044AD994AA2C792D46D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sayfa1' datatype='table' name='[__tableau_internal_object_id__].[Sayfa1_7983CA442F6044AD994AA2C792D46D80]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sayfa1' id='Sayfa1_7983CA442F6044AD994AA2C792D46D80'>
            <properties context=''>
              <relation connection='excel-direct.1j4g4ys16fdygv1g6owgc1hxja2m' name='Sayfa1' table='[Sayfa1$]' type='table'>
                <columns gridOrigin='A1:D233:no:A1:D233:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sayfa1 (Tableau Table4.)' inline='true' name='federated.0qupg7c0euhgig1cacsml027lawm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table4.' name='excel-direct.1uxogfn1eg0950162pp201bg7jco'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Osman/Desktop/asdfgh/sql/Tableau Table4..xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1uxogfn1eg0950162pp201bg7jco' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1uxogfn1eg0950162pp201bg7jco' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_09FA9E228A2A4C81A0AFB21DACC6555D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_09FA9E228A2A4C81A0AFB21DACC6555D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_09FA9E228A2A4C81A0AFB21DACC6555D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_09FA9E228A2A4C81A0AFB21DACC6555D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_09FA9E228A2A4C81A0AFB21DACC6555D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sayfa1' datatype='table' name='[__tableau_internal_object_id__].[Sayfa1_09FA9E228A2A4C81A0AFB21DACC6555D]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Russia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Germany&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;France&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Spain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Italy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Iran&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sayfa1' id='Sayfa1_09FA9E228A2A4C81A0AFB21DACC6555D'>
            <properties context=''>
              <relation connection='excel-direct.1uxogfn1eg0950162pp201bg7jco' name='Sayfa1' table='[Sayfa1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Light'>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sayfa1 (Tableau Table1)' name='federated.1vwxacd09zde151ak5j240zt97g2' />
          </datasources>
          <datasource-dependencies datasource='federated.1vwxacd09zde151ak5j240zt97g2'>
            <column datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vwxacd09zde151ak5j240zt97g2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vwxacd09zde151ak5j240zt97g2].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vwxacd09zde151ak5j240zt97g2].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vwxacd09zde151ak5j240zt97g2].[sum:DeathPercentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1vwxacd09zde151ak5j240zt97g2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1vwxacd09zde151ak5j240zt97g2].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vwxacd09zde151ak5j240zt97g2].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vwxacd09zde151ak5j240zt97g2].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1vwxacd09zde151ak5j240zt97g2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vwxacd09zde151ak5j240zt97g2].[:Measure Names]' value='132' />
            <format attr='color' value='#606b76' />
            <format attr='color' data-class='subtotal' value='#000000' />
            <format attr='border-color' value='#b4b4b4' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='text-format' field='[federated.1vwxacd09zde151ak5j240zt97g2].[Multiple Values]' value='' />
            <format attr='text-format' field='[federated.1vwxacd09zde151ak5j240zt97g2].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='height' value='29' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#dfe7e8' />
            <format attr='border-color' value='#b4b4b4' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='text-decoration' scope='cols' value='none' />
            <format attr='font-style' scope='cols' value='normal' />
            <format attr='color' scope='cols' value='#000000' />
            <format attr='font-family' scope='cols' value='Tableau Light' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#b4b4b4' />
            <format attr='border-color' data-class='subtotal' value='#ffffff' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#b4b4b4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1vwxacd09zde151ak5j240zt97g2].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.4612706899642944' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1vwxacd09zde151ak5j240zt97g2].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{9656CAA9-66A3-485F-A540-D801AF0D0BA1}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Light'>Total Deaths Per Continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sayfa1 (Tableau Table2)' name='federated.08wgs0612o17f210tvr8q1bvt3ik' />
          </datasources>
          <datasource-dependencies datasource='federated.08wgs0612o17f210tvr8q1bvt3ik'>
            <column datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continents' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.08wgs0612o17f210tvr8q1bvt3ik].[none:location:nk]' direction='ASC' using='[federated.08wgs0612o17f210tvr8q1bvt3ik].[sum:TotalDeathCount:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08wgs0612o17f210tvr8q1bvt3ik].[sum:TotalDeathCount:qk]' field-type='quantitative' max='1300000' min='0' minor-origin='0' minor-spacing='100000.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.08wgs0612o17f210tvr8q1bvt3ik].[sum:TotalDeathCount:qk]' scope='rows' value='Total Death' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.08wgs0612o17f210tvr8q1bvt3ik].[none:location:nk]' value='82' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.08wgs0612o17f210tvr8q1bvt3ik].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#aa0000' />
                <format attr='size' value='2' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='none' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08wgs0612o17f210tvr8q1bvt3ik].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.08wgs0612o17f210tvr8q1bvt3ik].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{CE651CD2-318C-42FD-BE51-CDDFA54F80EB}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000cc' fontname='Tableau Light'>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sayfa1 (Tableau Table3)' name='federated.1q0kfud1ftacg71b8u60c0lxu6tb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1q0kfud1ftacg71b8u60c0lxu6tb'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1q0kfud1ftacg71b8u60c0lxu6tb].[Longitude (generated)]' field-type='quantitative' max='44282379.812535107' min='-31380914.435061514' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1q0kfud1ftacg71b8u60c0lxu6tb].[Latitude (generated)]' field-type='quantitative' max='15781876.793981332' min='-5456942.8021820644' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1q0kfud1ftacg71b8u60c0lxu6tb].[sum:PercentPopulationInfected:qk]' num-steps='10' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e6cfcf</color>
                <color>#dcb0b0</color>
                <color>#d29393</color>
                <color>#c87878</color>
                <color>#be5f5f</color>
                <color>#b44848</color>
                <color>#aa3333</color>
                <color>#a02020</color>
                <color>#960f0f</color>
                <color>#8c0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1q0kfud1ftacg71b8u60c0lxu6tb].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected '>
              <formatted-text>
                <run>Percent Population Infected </run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1q0kfud1ftacg71b8u60c0lxu6tb].[none:Location:nk]' />
              <color column='[federated.1q0kfud1ftacg71b8u60c0lxu6tb].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.1q0kfud1ftacg71b8u60c0lxu6tb].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.40580111742019653' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1q0kfud1ftacg71b8u60c0lxu6tb].[Latitude (generated)]</rows>
        <cols>[federated.1q0kfud1ftacg71b8u60c0lxu6tb].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6452BE94-640F-4A16-BA39-0E1EAEB116BF}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Light'>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sayfa1 (Tableau Table4.)' name='federated.0qupg7c0euhgig1cacsml027lawm' />
          </datasources>
          <datasource-dependencies datasource='federated.0qupg7c0euhgig1cacsml027lawm'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qupg7c0euhgig1cacsml027lawm].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0qupg7c0euhgig1cacsml027lawm].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0qupg7c0euhgig1cacsml027lawm].[fVal:avg:PercentPopulationInfected:qk]' scope='rows' value='Percent Population Infected (Avg.)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0qupg7c0euhgig1cacsml027lawm].[tmn:date:qk]' value='82' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qupg7c0euhgig1cacsml027lawm].[none:Location:nk]' />
              <text column='[federated.0qupg7c0euhgig1cacsml027lawm].[none:Location:nk]' />
              <color column='[federated.0qupg7c0euhgig1cacsml027lawm].[none:Forecast Indicator:nk]' />
              <text column='[federated.0qupg7c0euhgig1cacsml027lawm].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qupg7c0euhgig1cacsml027lawm].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0qupg7c0euhgig1cacsml027lawm].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{C971DA1A-F3B2-4376-86CF-9473BEFC08CD}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97342' id='25' param='vert' w='98646' x='677' y='1329'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97342' id='23' param='vert' w='98646' x='677' y='1329'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97342' id='18' param='horz' w='98646' x='677' y='1329'>
                <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97342' id='12' param='horz' w='98646' x='677' y='1329'>
                  <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97342' id='8' param='horz' w='98646' x='677' y='1329'>
                    <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='97342' id='6' w='98646' x='677' y='1329'>
                      <zone h='17936' id='3' name='Sheet 1' w='44921' x='677' y='1329'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='37209' id='5' name='Sheet 2' w='44921' x='677' y='19265'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='42197' id='14' name='Sheet 4' w='75793' x='677' y='56474'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' fixed-size='316' h='42197' id='15' is-fixed='true' name='Sheet 4' pane-specification-id='2' param='[federated.0qupg7c0euhgig1cacsml027lawm].[none:Location:nk]&#10;[federated.0qupg7c0euhgig1cacsml027lawm].[none:Forecast Indicator:nk]' w='22853' x='76470' y='56474'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='43185' id='16' name='Sheet 3' w='53725' x='45598' y='1329'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='11960' id='19' name='Sheet 3' pane-specification-id='0' param='[federated.1q0kfud1ftacg71b8u60c0lxu6tb].[sum:PercentPopulationInfected:qk]' w='53725' x='45598' y='44514'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='31' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97342' id='30' param='vert' w='98646' x='677' y='1329'>
                <zone fixed-size='135' h='17936' id='3' is-fixed='true' name='Sheet 1' w='44921' x='677' y='1329'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43185' id='16' is-fixed='true' name='Sheet 3' w='53725' x='45598' y='1329'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='11960' id='19' name='Sheet 3' pane-specification-id='0' param='[federated.1q0kfud1ftacg71b8u60c0lxu6tb].[sum:PercentPopulationInfected:qk]' w='53725' x='45598' y='44514'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37209' id='5' is-fixed='true' name='Sheet 2' w='44921' x='677' y='19265'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42197' id='14' is-fixed='true' name='Sheet 4' w='75793' x='677' y='56474'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' fixed-size='316' h='42197' id='15' name='Sheet 4' pane-specification-id='2' param='[federated.0qupg7c0euhgig1cacsml027lawm].[none:Location:nk]&#10;[federated.0qupg7c0euhgig1cacsml027lawm].[none:Forecast Indicator:nk]' w='22853' x='76470' y='56474'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B98960D3-CBC7-4640-AC5E-B08E01A226D5}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vwxacd09zde151ak5j240zt97g2].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD3A1CD4-7E6C-4824-8A94-0EAE6167C9AA}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08wgs0612o17f210tvr8q1bvt3ik].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.08wgs0612o17f210tvr8q1bvt3ik].[sum:TotalDeathCount:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.08wgs0612o17f210tvr8q1bvt3ik].[none:location:nk]</field>
            <field>[federated.08wgs0612o17f210tvr8q1bvt3ik].[sum:TotalDeathCount:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2E4D36DF-C261-4C45-98DC-2B7C3A05F8C6}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1q0kfud1ftacg71b8u60c0lxu6tb].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1q0kfud1ftacg71b8u60c0lxu6tb].[none:Location:nk]</field>
            <field>[federated.1q0kfud1ftacg71b8u60c0lxu6tb].[sum:PercentPopulationInfected:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{2A0FA404-27CD-4AA5-B0B0-1A81CF28B126}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0qupg7c0euhgig1cacsml027lawm].[none:Location:nk]&#10;[federated.0qupg7c0euhgig1cacsml027lawm].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qupg7c0euhgig1cacsml027lawm].[none:Forecast Indicator:nk]</field>
            <field>[federated.0qupg7c0euhgig1cacsml027lawm].[none:Location:nk]</field>
            <field>[federated.0qupg7c0euhgig1cacsml027lawm].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{728B1D5E-9EE1-448C-A0E0-4096CD2FC956}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight field='[federated.08wgs0612o17f210tvr8q1bvt3ik].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0qupg7c0euhgig1cacsml027lawm].[none:Forecast Indicator:nk]</field>
              <field>[federated.0qupg7c0euhgig1cacsml027lawm].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='14' />
      <simple-id uuid='{C3FF1117-8BBD-4CE3-80FE-A3C6FFFB8196}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='53' name='Sheet 1' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      I0Hae/r4/x9rDZ/NbBtAAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
